{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/hagaibaumgarten/ProgrammingAssignment2/blob/master/Task3\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FnsQ2qaMIONH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "720c10bd-3458-47f7-e625-f499edf37110"
      },
      "source": [
        "import re\n",
        "text1 = {1: 'To Sherlock Holmes1 sHe is always the woman.', 2:'I have seldom heard him mention her under any other name.'}\n",
        "for row in text1:\n",
        "  wordlist = text1[row].split()\n",
        "  clean=[word for word in wordlist if (bool(re.match('[A-Z]', word)) == False and len(word)>2)]\n",
        "  print(clean)\n",
        "  \n",
        "  # for word in wordlist:\n",
        "    # clean=re.search('[A-Z]', word)\n",
        "    # print(bool(clean))\n",
        "\n",
        "  #clean = [word for word in wordlist if re.search('1', word) == 'None']\n",
        "  # print(clean)\n",
        "  # for word in wordlist:\n",
        "    # print(word)\n",
        "\n",
        "    # [\n",
        "\n",
        "  # print(row)\n",
        "  # print(text1[row])\n"
      ],
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['sHe', 'always', 'the', 'woman.']\n",
            "['have', 'seldom', 'heard', 'him', 'mention', 'her', 'under', 'any', 'other', 'name.']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mcNvxG1gIZIK",
        "colab_type": "text"
      },
      "source": [
        "**Task2 - Pars input text**:\n",
        "\n",
        "\n",
        "1.   Use lower() and split() functions in order to insert the words into list and separate\n",
        "2.   Input: text1 (dictionary of strings)\n",
        "3.   Output: text2 (dictionary of key is tuple of line # and word # and values are words (keep both clean and dirty words but mark them)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    }
  ]
}